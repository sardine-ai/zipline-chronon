# Contains default rules, variables and functions available to all BUILD files

load("//tools/build_rules:common.bzl", "jar", "scala_jar")
load("//tools/build_rules:jvm_binary.bzl", "jvm_binary")

load("@rules_java//java:defs.bzl", "java_library")
load("@contrib_rules_jvm//docs:stardoc-input.bzl", "java_test_suite")
load("@io_bazel_rules_scala//scala:scala.bzl", "scala_library", "scala_test", "scala_test_suite")
load("//tools/build_rules:maven_artifact.bzl", "maven_artifact", "scala_artifact")
load("//tools/build_rules:scala_junit_test_suite.bzl", "scala_junit_suite")

_JVM_FLAGS_FOR_ACCESSING_BASE_JAVA_CLASSES = [
    "--add-opens=java.base/java.lang=ALL-UNNAMED",
    "--add-opens=java.base/java.lang.invoke=ALL-UNNAMED",
    "--add-opens=java.base/java.lang.reflect=ALL-UNNAMED",
    "--add-opens=java.base/java.io=ALL-UNNAMED",
    "--add-opens=java.base/java.net=ALL-UNNAMED",
    "--add-opens=java.base/java.nio=ALL-UNNAMED",
    "--add-opens=java.base/java.util=ALL-UNNAMED",
    "--add-opens=java.base/java.util.concurrent=ALL-UNNAMED",
    "--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED",
    "--add-opens=java.base/sun.nio.ch=ALL-UNNAMED",
    "--add-opens=java.base/sun.nio.cs=ALL-UNNAMED",
    "--add-opens=java.base/sun.security.action=ALL-UNNAMED",
    "--add-opens=java.base/sun.util.calendar=ALL-UNNAMED",
]

_SCALA_DEPS = [
    "@io_bazel_rules_scala_scala_library_2_12_18//:io_bazel_rules_scala_scala_library_2_12_18",
    # other scala related deps...
]

_RUNFILES_DEP = [
    "@bazel_tools//tools/java/runfiles:runfiles",
]

_FLINK_DEPS = [
    maven_artifact("org.apache.flink:flink-streaming-java"),
    maven_artifact("org.apache.flink:flink-core"),
    maven_artifact("org.apache.flink:flink-metrics-dropwizard"),
    maven_artifact("org.apache.flink:flink-metrics-core"),
    maven_artifact("org.apache.flink:flink-clients"),
    maven_artifact("org.apache.flink:flink-yarn"),
    maven_artifact("org.apache.flink:flink-connector-kafka"),
    maven_artifact("org.apache.flink:flink-connector-files"),
    maven_artifact("org.apache.flink:flink-avro"),
]

_FLINK_TEST_DEPS = [
    # Libraries
    maven_artifact("org.apache.flink:flink-streaming-java"),
    maven_artifact("org.apache.flink:flink-connector-kafka"),
    maven_artifact("org.apache.flink:flink-connector-files"),
    maven_artifact("org.apache.flink:flink-shaded-guava"),
    maven_artifact("org.apache.flink:flink-core"),
    maven_artifact("org.apache.flink:flink-metrics-core"),
    maven_artifact("org.apache.flink:flink-runtime"),
    maven_artifact("org.scala-lang:scala-library"),
    maven_artifact("org.scala-lang:scala-reflect"),
    # Testing
    maven_artifact("org.apache.flink:flink-test-utils"),
    maven_artifact("org.apache.flink:flink-runtime-tests"),
]

_VERTX_DEPS = [
    maven_artifact("io.vertx:vertx-core"),
    maven_artifact("io.vertx:vertx-web"),
    maven_artifact("io.vertx:vertx-web-client"),
    maven_artifact("io.vertx:vertx-config"),
    maven_artifact("io.vertx:vertx-micrometer-metrics"),
]

_VERTX_TEST_DEPS = [
    # Libraries
    maven_artifact("io.vertx:vertx-core"),
    maven_artifact("io.vertx:vertx-web"),
    maven_artifact("io.vertx:vertx-web-client"),
    # Testing
    maven_artifact("io.vertx:vertx-junit5"),
    maven_artifact("io.vertx:vertx-unit"),
]

_CIRCE_DEPS = [
    scala_artifact("io.circe:circe-core"),
    scala_artifact("io.circe:circe-generic"),
    scala_artifact("io.circe:circe-parser"),
]

_SCALA_TEST_DEPS = [
    # Testing
    scala_artifact("org.scalatest:scalatest-matchers-core"),
    scala_artifact("org.scalatest:scalatest-core"),
    scala_artifact("org.scalatest:scalatest"),
    scala_artifact("org.scalatest:scalatest-flatspec"),
    scala_artifact("org.scalatest:scalatest-shouldmatchers"),
    scala_artifact("org.scalactic:scalactic"),
    scala_artifact("org.scalatestplus:mockito-3-4"),
    maven_artifact("org.scalatest:scalatest-compatible"),
]