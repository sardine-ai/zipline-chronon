{
  "aggregations": [
    {
      "argMap": {},
      "inputColumn": "add_cart",
      "operation": 7,
      "windows": [
        {
          "length": 1,
          "timeUnit": 1
        }
      ]
    },
    {
      "argMap": {},
      "inputColumn": "view",
      "operation": 7,
      "windows": [
        {
          "length": 1,
          "timeUnit": 1
        }
      ]
    },
    {
      "argMap": {},
      "inputColumn": "purchase",
      "operation": 7,
      "windows": [
        {
          "length": 1,
          "timeUnit": 1
        }
      ]
    },
    {
      "argMap": {},
      "inputColumn": "favorite",
      "operation": 7,
      "windows": [
        {
          "length": 1,
          "timeUnit": 1
        }
      ]
    }
  ],
  "keyColumns": [
    "listing_id"
  ],
  "metaData": {
    "columnHashes": {
      "add_cart_sum_1d": "f79226e7757c6aa927fc1007d6749a94",
      "favorite_sum_1d": "b2d5bbaffe0b5b5d3e186bb0022ee041",
      "listing_id": "27435c7763a514975682fcc80c73e199",
      "purchase_sum_1d": "8e26d6cb81cb2f557be0d86f88836b4e",
      "view_sum_1d": "cbf9c10a17d7f4669437872708303738"
    },
    "customJson": "{\"airflowDependencies\": [{\"name\": \"wf_data_item_events_parquet_compat_partitioned_with_offset_0\", \"spec\": \"data.item_events_parquet_compat_partitioned/_DATE={{ macros.ds_add(ds, 0) }}\"}]}",
    "executionInfo": {
      "clusterConf": {
        "common": {},
        "modeClusterConfigs": {
          "upload": {
            "dataproc.config": "{\"gceClusterConfig\": {\"subnetworkUri\": \"default\", \"serviceAccount\": \"dataproc@canary-443022.iam.gserviceaccount.com\", \"serviceAccountScopes\": [\"https://www.googleapis.com/auth/cloud-platform\", \"https://www.googleapis.com/auth/cloud.useraccounts.readonly\", \"https://www.googleapis.com/auth/devstorage.read_write\", \"https://www.googleapis.com/auth/logging.write\"], \"metadata\": {\"hive-version\": \"3.1.2\", \"SPARK_BQ_CONNECTOR_URL\": \"gs://spark-lib/bigquery/spark-3.5-bigquery-0.42.1.jar\", \"artifact_prefix\": \"gs://zipline-artifacts-canary\"}, \"tags\": []}, \"masterConfig\": {\"numInstances\": 1, \"machineTypeUri\": \"n2-highmem-8\", \"diskConfig\": {\"bootDiskType\": \"pd-standard\", \"bootDiskSizeGb\": 1024}}, \"workerConfig\": {\"numInstances\": 2, \"machineTypeUri\": \"n2-highmem-4\", \"diskConfig\": {\"bootDiskType\": \"pd-standard\", \"bootDiskSizeGb\": 64, \"numLocalSsds\": 2}}, \"softwareConfig\": {\"imageVersion\": \"2.2.50-debian12\", \"optionalComponents\": [\"FLINK\", \"JUPYTER\"], \"properties\": {}}, \"initializationActions\": [{\"executable_file\": \"gs://zipline-artifacts-canary/scripts/copy_java_security.sh\"}], \"endpointConfig\": {\"enableHttpPortAccess\": true}, \"lifecycleConfig\": {\"idleDeleteTtl\": \"7200s\"}}"
          }
        }
      },
      "conf": {
        "common": {
          "spark.chronon.cloud_provider": "gcp",
          "spark.chronon.coalesce.factor": "10",
          "spark.chronon.partition.column": "_DATE",
          "spark.chronon.partition.format": "yyyy-MM-dd",
          "spark.chronon.table.format_provider.class": "ai.chronon.integrations.cloud_gcp.GcpFormatProvider",
          "spark.chronon.table.gcs.connector_output_dataset": "data",
          "spark.chronon.table.gcs.connector_output_project": "canary-443022",
          "spark.chronon.table.gcs.temporary_gcs_bucket": "zipline-warehouse-canary",
          "spark.chronon.table_write.format": "iceberg",
          "spark.chronon.table_write.prefix": "gs://zipline-warehouse-canary/data/tables/",
          "spark.default.parallelism": "10",
          "spark.kryo.registrator": "ai.chronon.integrations.cloud_gcp.ChrononIcebergKryoRegistrator",
          "spark.sql.catalog.default_iceberg": "ai.chronon.integrations.cloud_gcp.DelegatingBigQueryMetastoreCatalog",
          "spark.sql.catalog.default_iceberg.catalog-impl": "org.apache.iceberg.gcp.bigquery.BigQueryMetastoreCatalog",
          "spark.sql.catalog.default_iceberg.gcp_location": "us-central1",
          "spark.sql.catalog.default_iceberg.gcp_project": "canary-443022",
          "spark.sql.catalog.default_iceberg.io-impl": "org.apache.iceberg.io.ResolvingFileIO",
          "spark.sql.catalog.default_iceberg.warehouse": "gs://zipline-warehouse-canary/data/tables/",
          "spark.sql.catalog.spark_catalog": "ai.chronon.integrations.cloud_gcp.DelegatingBigQueryMetastoreCatalog",
          "spark.sql.catalog.spark_catalog.catalog-impl": "org.apache.iceberg.gcp.bigquery.BigQueryMetastoreCatalog",
          "spark.sql.catalog.spark_catalog.gcp_location": "us-central1",
          "spark.sql.catalog.spark_catalog.gcp_project": "canary-443022",
          "spark.sql.catalog.spark_catalog.io-impl": "org.apache.iceberg.io.ResolvingFileIO",
          "spark.sql.catalog.spark_catalog.warehouse": "gs://zipline-warehouse-canary/data/tables/",
          "spark.sql.defaultUrlStreamHandlerFactory.enabled": "false",
          "spark.sql.shuffle.partitions": "10"
        },
        "modeConfigs": {
          "backfill": {
            "spark.chronon.backfill_cloud_provider": "gcp",
            "spark.chronon.cloud_provider": "gcp",
            "spark.chronon.coalesce.factor": "10",
            "spark.chronon.partition.column": "_DATE",
            "spark.chronon.partition.format": "yyyy-MM-dd",
            "spark.chronon.table.format_provider.class": "ai.chronon.integrations.cloud_gcp.GcpFormatProvider",
            "spark.chronon.table.gcs.connector_output_dataset": "data",
            "spark.chronon.table.gcs.connector_output_project": "canary-443022",
            "spark.chronon.table.gcs.temporary_gcs_bucket": "zipline-warehouse-canary",
            "spark.chronon.table_write.format": "iceberg",
            "spark.chronon.table_write.prefix": "gs://zipline-warehouse-canary/data/tables/",
            "spark.default.parallelism": "10",
            "spark.kryo.registrator": "ai.chronon.integrations.cloud_gcp.ChrononIcebergKryoRegistrator",
            "spark.sql.catalog.default_iceberg": "ai.chronon.integrations.cloud_gcp.DelegatingBigQueryMetastoreCatalog",
            "spark.sql.catalog.default_iceberg.catalog-impl": "org.apache.iceberg.gcp.bigquery.BigQueryMetastoreCatalog",
            "spark.sql.catalog.default_iceberg.gcp_location": "us-central1",
            "spark.sql.catalog.default_iceberg.gcp_project": "canary-443022",
            "spark.sql.catalog.default_iceberg.io-impl": "org.apache.iceberg.io.ResolvingFileIO",
            "spark.sql.catalog.default_iceberg.warehouse": "gs://zipline-warehouse-canary/data/tables/",
            "spark.sql.catalog.spark_catalog": "ai.chronon.integrations.cloud_gcp.DelegatingBigQueryMetastoreCatalog",
            "spark.sql.catalog.spark_catalog.catalog-impl": "org.apache.iceberg.gcp.bigquery.BigQueryMetastoreCatalog",
            "spark.sql.catalog.spark_catalog.gcp_location": "us-central1",
            "spark.sql.catalog.spark_catalog.gcp_project": "canary-443022",
            "spark.sql.catalog.spark_catalog.io-impl": "org.apache.iceberg.io.ResolvingFileIO",
            "spark.sql.catalog.spark_catalog.warehouse": "gs://zipline-warehouse-canary/data/tables/",
            "spark.sql.defaultUrlStreamHandlerFactory.enabled": "false",
            "spark.sql.shuffle.partitions": "10"
          }
        }
      },
      "env": {
        "common": {
          "ARTIFACT_PREFIX": "gs://zipline-artifacts-dev",
          "CHRONON_ONLINE_ARGS": "-Ztasks=4 -Zbootstrap=bootstrap.zipline-kafka-cluster.us-central1.managedkafka.canary-443022.cloud.goog:9092",
          "CHRONON_ONLINE_CLASS": "[ONLINE-TODO]your.online.class",
          "CLOUD_PROVIDER": "gcp",
          "CUSTOMER_ID": "dev",
          "ENABLE_PUBSUB": "true",
          "FLINK_STATE_URI": "gs://zipline-warehouse-canary/flink-state",
          "FRONTEND_URL": "http://localhost:3000",
          "GCP_BIGTABLE_INSTANCE_ID": "zipline-canary-instance",
          "GCP_DATAPROC_CLUSTER_NAME": "zipline-canary-cluster",
          "GCP_PROJECT_ID": "canary-443022",
          "GCP_REGION": "us-central1",
          "HADOOP_DIR": "[STREAMING-TODO]/path/to/folder/containing",
          "HUB_URL": "http://localhost:3903",
          "JOB_MODE": "local[*]",
          "PARTITION_COLUMN": "ds",
          "PARTITION_FORMAT": "yyyy-MM-dd",
          "VERSION": "latest"
        },
        "modeEnvironments": {
          "upload": {
            "ARTIFACT_PREFIX": "gs://zipline-artifacts-dev",
            "CHRONON_ONLINE_ARGS": "-Ztasks=4 -Zbootstrap=bootstrap.zipline-kafka-cluster.us-central1.managedkafka.canary-443022.cloud.goog:9092",
            "CHRONON_ONLINE_CLASS": "[ONLINE-TODO]your.online.class",
            "CLOUD_PROVIDER": "gcp",
            "CUSTOMER_ID": "dev",
            "ENABLE_PUBSUB": "true",
            "FLINK_STATE_URI": "gs://zipline-warehouse-canary/flink-state",
            "FRONTEND_URL": "http://localhost:5173",
            "GCP_BIGTABLE_INSTANCE_ID": "zipline-canary-instance",
            "GCP_DATAPROC_CLUSTER_NAME": "zipline-transient-upload-cluster",
            "GCP_PROJECT_ID": "canary-443022",
            "GCP_REGION": "us-central1",
            "HADOOP_DIR": "[STREAMING-TODO]/path/to/folder/containing",
            "HUB_URL": "http://localhost:3903",
            "JOB_MODE": "local[*]",
            "PARTITION_COLUMN": "ds",
            "PARTITION_FORMAT": "yyyy-MM-dd",
            "VERSION": "latest"
          }
        }
      },
      "historicalBackfill": 0,
      "scheduleCron": "@daily"
    },
    "name": "gcp.item_event_canary.actions_v1__0",
    "online": 1,
    "outputNamespace": "data",
    "sourceFile": "group_bys/gcp/item_event_canary.py",
    "team": "gcp",
    "version": "0"
  },
  "sources": [
    {
      "events": {
        "query": {
          "selects": {
            "add_cart": "IF(event_type = 'backend_add_to_cart', 1, 0)",
            "favorite": "IF(event_type = 'backend_favorite_item2', 1, 0)",
            "listing_id": "EXPLODE(TRANSFORM(SPLIT(COALESCE(attributes['sold_listing_ids'], attributes['listing_id']), ','), e -> CAST(e AS LONG)))",
            "purchase": "IF(event_type = 'backend_cart_payment', 1, 0)",
            "view": "IF(event_type = 'view_listing', 1, 0)"
          },
          "timeColumn": "timestamp",
          "wheres": [
            "event_type in ('backend_add_to_cart', 'view_listing', 'backend_cart_payment', 'backend_favorite_item2')"
          ]
        },
        "table": "data.item_events_parquet_compat_partitioned",
        "topic": "kafka://test-item-event-data/serde=custom/provider_class=ai.chronon.flink.deser.MockCustomSchemaProvider/schema_name=item_event/security.protocol=SASL_SSL/sasl.mechanism=OAUTHBEARER/sasl.login.callback.handler.class=com.google.cloud.hosted.kafka.auth.GcpLoginCallbackHandler/sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"
      }
    }
  ]
}