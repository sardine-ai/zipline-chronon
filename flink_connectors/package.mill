package build.flink_connectors
import mill._
import mill.scalalib._

// Flink module
object `package` extends build.BaseModule {
  val flinkVersion = build.Constants.flinkVersion

  def moduleDeps = Seq(build.aggregator, build.api, build.online, build.flink)

  def compileMvnDeps = build.Constants.providedFlinkDeps

  def mvnDeps = build.Constants.commonDeps ++ build.Constants.loggingDeps ++ build.Constants.utilityDeps ++ Seq(
    mvn"io.dropwizard.metrics:metrics-core:4.2.19",
    mvn"com.google.protobuf:protobuf-java-util:3.25.1",
    mvn"com.google.protobuf:protobuf-java:3.25.1",
    mvn"com.google.cloud:google-cloud-pubsub:1.141.2"
      .exclude("com.fasterxml.jackson.core" -> "jackson-core")
      .exclude("com.fasterxml.jackson.core" -> "jackson-databind")
      .exclude("com.fasterxml.jackson.core" -> "jackson-annotations"),
    mvn"io.netty:netty-codec-http2:4.1.124.Final",
  )

  object test extends build.BaseTestModule {
    def moduleDeps = Seq(build.flink_connectors)
    def forkArgs = build.Constants.commonTestForkArgs
    def mvnDeps = super.mvnDeps() ++ super.compileMvnDeps() ++ build.Constants.testDeps ++ Seq(
      mvn"org.apache.flink:flink-test-utils:$flinkVersion"
        .exclude("org.apache.logging.log4j" -> "log4j-slf4j-impl")
        .exclude("log4j" -> "log4j"),
      mvn"com.google.cloud:google-cloud-pubsub:1.114.7"
        .exclude("com.fasterxml.jackson.core" -> "jackson-core"),
      mvn"org.apache.hadoop:hadoop-client-api:3.3.6"
        .exclude("org.apache.logging.log4j" -> "log4j-slf4j-impl")
        .exclude("log4j" -> "log4j"),
      mvn"org.apache.hadoop:hadoop-client-runtime:3.3.6",
      // Force correct Jackson versions
      mvn"com.fasterxml.jackson.core:jackson-core:2.15.2",
      mvn"com.fasterxml.jackson.core:jackson-databind:2.15.2",
      mvn"com.fasterxml.jackson.core:jackson-annotations:2.15.2"
    )
  }
}