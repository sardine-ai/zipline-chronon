package build.service
import mill._
import mill.scalalib._

// Service module (Java-based HTTP service)
object `package` extends build.BaseModule {
  def moduleDeps = Seq(build.online, build.api, build.service_commons)

  def mvnDeps = build.Constants.commonDeps ++ build.Constants.loggingDeps ++ build.Constants.utilityDeps ++
    Seq(
      mvn"io.vertx:vertx-core:4.5.10",
      mvn"io.vertx:vertx-web:4.5.10",
      mvn"io.micrometer:micrometer-registry-otlp:1.13.6".exclude("com.google.protobuf" -> "protobuf-java"),
      mvn"io.micrometer:micrometer-registry-prometheus:1.10.13".exclude("com.google.protobuf" -> "protobuf-java"),
      mvn"io.netty:netty-all:4.1.125.Final",
      // Explicitly add Netty versions that fix CVEs
      mvn"io.netty:netty-handler:4.1.118.Final",
      mvn"io.netty:netty-common:4.1.118.Final",
      mvn"io.netty:netty-codec-http2:4.1.125.Final",
      mvn"org.scala-lang:scala-reflect:${scalaVersion()}",
      mvn"org.scala-lang:scala-compiler:${scalaVersion()}",
      // add the version of protobuf that is compatible with our cloud deps 
      mvn"com.google.protobuf:protobuf-java:${build.Constants.protobufVersion}"
    )

  override def resources = Task.Sources(
    moduleDir / "src" / "main" / "resources"
  )
  
  def mainClass = Some("ai.chronon.service.ChrononServiceLauncher")

  def prependShellScript = ""

  object test extends build.BaseJUnit4TestModule {
    def moduleDeps = Seq(build.service)
    def mvnDeps = Seq(
      mvn"junit:junit:4.13.2",
      mvn"com.novocode:junit-interface:0.11",
      mvn"org.mockito:mockito-core:5.12.0",
      mvn"io.vertx:vertx-unit:4.5.10"
    )
  }
}