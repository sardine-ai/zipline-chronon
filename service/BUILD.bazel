java_library(
    name = "lib",
    srcs = glob(["src/main/**/*.java"]),
    resources = glob(["src/main/resources/**/*"]),
    visibility = ["//visibility:public"],
    deps = _SCALA_DEPS + _VERTX_DEPS + [
        "//online:lib",
        "//service_commons:lib",
        maven_artifact("com.typesafe:config"),
        maven_artifact("io.netty:netty-all"),
        maven_artifact("io.micrometer:micrometer-registry-statsd"),
        maven_artifact("io.micrometer:micrometer-core"),
        maven_artifact("com.fasterxml.jackson.core:jackson-annotations"),
        maven_artifact("com.fasterxml.jackson.core:jackson-core"),
        maven_artifact("com.fasterxml.jackson.core:jackson-databind"),
        maven_artifact("org.slf4j:slf4j-api"),
        scala_artifact_with_suffix("org.json4s:json4s-core"),
    ],
)

test_deps = _VERTX_TEST_DEPS + [
    ":lib",
    "//online:lib",
    "//service_commons:lib",
    maven_artifact("org.mockito:mockito-core"),
    maven_artifact("org.junit.jupiter:junit-jupiter-api"),
    maven_artifact("junit:junit"),
    maven_artifact("org.junit.platform:junit-platform-launcher"),
    maven_artifact("org.junit.platform:junit-platform-reporting"),
    maven_artifact("net.bytebuddy:byte-buddy"),
    maven_artifact("net.bytebuddy:byte-buddy-agent"),
    maven_artifact("org.apache.avro:avro"),
]

java_library(
    name = "test_lib",
    srcs = glob(["src/test/**/*.java"]),
    visibility = ["//visibility:public"],
    deps = test_deps,
)

java_test_suite(
    name = "tests",
    srcs = glob(["src/test/**/*.java"]),
    runner = "junit4",
    visibility = ["//visibility:public"],
    deps = test_deps + [":test_lib"],
)

jvm_binary(
    name = "service_assembly",
    main_class = "ai.chronon.service.ChrononServiceLauncher",
    runtime_deps = [":lib"],
    resources = glob(["src/main/resources/**/*"]),
)
