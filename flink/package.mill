package build.flink
import mill._
import mill.scalalib._

// Flink module
object `package` extends build.BaseModule {
  val flinkVersion = build.Constants.flinkVersion

  def moduleDeps = Seq(build.aggregator, build.api, build.online)

  def compileMvnDeps = build.Constants.providedFlinkDeps ++ Seq(
    mvn"org.apache.spark::spark-core:${build.Constants.sparkVersion}",
    mvn"org.apache.spark::spark-sql:${build.Constants.sparkVersion}",
  )

  def mvnDeps = build.Constants.commonDeps ++ build.Constants.loggingDeps ++ build.Constants.utilityDeps ++ Seq(
    mvn"io.dropwizard.metrics:metrics-core:4.2.19",
    mvn"org.apache.flink:flink-metrics-dropwizard:$flinkVersion",
    mvn"org.apache.flink:flink-metrics-prometheus:$flinkVersion",
    mvn"org.apache.flink:flink-avro:$flinkVersion",
    mvn"io.confluent:kafka-schema-registry-client:7.8.0"
      .exclude("com.fasterxml.jackson.core" -> "jackson-core")
      .exclude("com.fasterxml.jackson.core" -> "jackson-databind")
      .exclude("com.fasterxml.jackson.core" -> "jackson-annotations"),
    mvn"io.confluent:kafka-protobuf-provider:7.8.0"
      .exclude("com.fasterxml.jackson.core" -> "jackson-core")
      .exclude("com.fasterxml.jackson.core" -> "jackson-databind")
      .exclude("com.fasterxml.jackson.core" -> "jackson-annotations"),
    mvn"com.google.protobuf:protobuf-java-util:3.25.1",
    mvn"com.google.protobuf:protobuf-java:3.25.1",
    mvn"org.apache.flink:flink-connector-kafka:3.0.2-1.18",
    mvn"io.netty:netty-codec-http2:4.1.125.Final",
  )

  def mainClass = Some("ai.chronon.flink.FlinkJob")

  def prependShellScript = ""
  
  object test extends build.BaseTestModule {
    def moduleDeps = Seq(build.flink)
    def forkArgs = build.Constants.commonTestForkArgs
    def mvnDeps = super.mvnDeps() ++ super.compileMvnDeps() ++ build.Constants.testDeps ++ Seq(
      mvn"org.apache.flink:flink-test-utils:$flinkVersion"
        .exclude("org.apache.logging.log4j" -> "log4j-slf4j-impl")
        .exclude("log4j" -> "log4j"),
      mvn"org.apache.spark::spark-hive:${build.Constants.sparkVersion}",
      mvn"org.apache.spark::spark-core:${build.Constants.sparkVersion}"
        .exclude("com.fasterxml.jackson.core" -> "jackson-core")
        .exclude("com.fasterxml.jackson.core" -> "jackson-databind")
        .exclude("com.fasterxml.jackson.core" -> "jackson-annotations")
        .exclude("org.apache.logging.log4j" -> "log4j-slf4j-impl")
        .exclude("log4j" -> "log4j"),
      mvn"org.apache.spark::spark-sql:${build.Constants.sparkVersion}"
        .exclude("com.fasterxml.jackson.core" -> "jackson-core")
        .exclude("com.fasterxml.jackson.core" -> "jackson-databind")
        .exclude("com.fasterxml.jackson.core" -> "jackson-annotations")
        .exclude("org.apache.logging.log4j" -> "log4j-slf4j-impl")
        .exclude("log4j" -> "log4j"),
      mvn"org.apache.spark::spark-catalyst:${build.Constants.sparkVersion}"
        .exclude("com.fasterxml.jackson.core" -> "jackson-core")
        .exclude("com.fasterxml.jackson.core" -> "jackson-databind")
        .exclude("com.fasterxml.jackson.core" -> "jackson-annotations")
        .exclude("org.apache.logging.log4j" -> "log4j-slf4j-impl")
        .exclude("log4j" -> "log4j"),
      mvn"org.apache.hadoop:hadoop-client-api:3.3.6"
        .exclude("org.apache.logging.log4j" -> "log4j-slf4j-impl")
        .exclude("log4j" -> "log4j"),
      mvn"org.apache.hadoop:hadoop-client-runtime:3.3.6",
      // Force correct Jackson versions
      mvn"com.fasterxml.jackson.core:jackson-core:2.15.2",
      mvn"com.fasterxml.jackson.core:jackson-databind:2.15.2",
      mvn"com.fasterxml.jackson.core:jackson-annotations:2.15.2"
    )
  }
}