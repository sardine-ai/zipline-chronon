import mill._
import mill.scalalib._
import mill.scalalib.scalafmt._
import coursier.maven.MavenRepository

// Shared constants and dependencies
object Constants {
  // Common repositories
  def repositories = Seq(
    MavenRepository("https://repo1.maven.org/maven2/"),
    MavenRepository("https://packages.confluent.io/maven/"),
    MavenRepository("https://linkedin.jfrog.io/artifactory/avro-util/"),
    MavenRepository("https://repository.apache.org/content/repositories/releases/"),
    MavenRepository("https://conjars.org/repo/")
  )

  val scalaVersion = "2.12.18"
  // TODO: set this to catch up to the version we have in the platform repo
  val chrononVersion = "0.0.32"
  val jvmId = ""

  // Common dependencies
  def commonDeps = Seq(
    mvn"org.scala-lang.modules::scala-collection-compat:2.6.0",
    mvn"org.scala-lang.modules::scala-parser-combinators:2.3.0",
    mvn"org.scala-lang.modules::scala-java8-compat:1.0.2"
  )

  def loggingDeps = Seq(
    mvn"org.slf4j:slf4j-api:1.7.36",
    mvn"ch.qos.logback:logback-classic:1.3.15",
    mvn"ch.qos.logback:logback-core:1.3.15"
  )

  def utilityDeps = Seq(
    mvn"com.fasterxml.jackson.core:jackson-core:2.15.2",
    mvn"com.fasterxml.jackson.core:jackson-databind:2.15.2",
    mvn"com.fasterxml.jackson.core:jackson-annotations:2.15.2",
    mvn"com.fasterxml.jackson.module::jackson-module-scala:2.15.2",
    mvn"com.google.code.gson:gson:2.10.1",
    mvn"org.apache.commons:commons-lang3:3.18.0",
    mvn"org.apache.commons:commons-math3:3.6.1",
    mvn"org.apache.commons:commons-pool2:2.11.1",
    mvn"commons-io:commons-io:2.9.0",
    mvn"com.google.guava:guava:33.3.1-jre",
    mvn"org.yaml:snakeyaml:2.3",
    mvn"com.typesafe:config:1.4.3",
    mvn"javax.annotation:javax.annotation-api:1.3.2"
  )

  def testDeps = Seq(
    mvn"org.scalatest::scalatest:3.2.15",
    mvn"org.scalatest::scalatest-shouldmatchers:3.2.15",
    mvn"org.scalactic::scalactic:3.2.15",
    mvn"org.mockito:mockito-core:5.12.0",
    mvn"org.mockito::mockito-scala:1.17.0",
    mvn"org.scalatestplus::mockito-3-4:3.2.10.0",
    mvn"junit:junit:4.13.2",
    mvn"com.novocode:junit-interface:0.11"
  )

  // Version definitions
  val sparkVersion = "3.5.3"
  def sparkDeps = Seq(
    mvn"org.apache.spark::spark-core:$sparkVersion",
    mvn"org.apache.spark::spark-sql:$sparkVersion", 
    mvn"org.apache.spark::spark-catalyst:$sparkVersion",
    mvn"org.apache.spark::spark-hive:$sparkVersion",
    mvn"org.apache.iceberg::iceberg-spark-runtime-3.5:1.6.1",
    mvn"org.apache.hudi::hudi-spark3.5-bundle:1.0.0",
    mvn"org.apache.hadoop:hadoop-client-api:3.3.6",
    mvn"org.apache.hadoop:hadoop-client-runtime:3.3.6"
  )
  
  val flinkVersion = "1.17.0"
  def providedFlinkDeps = Seq(
    mvn"org.apache.flink:flink-streaming-java:$flinkVersion",
    mvn"org.apache.flink:flink-clients:$flinkVersion",
  )
  
  val protobufVersion = "3.25.5"
  
  // Common JVM arguments for all test modules
  def commonTestForkArgs = Seq(
    "--add-opens=java.base/java.lang=ALL-UNNAMED",
    "--add-opens=java.base/java.lang.invoke=ALL-UNNAMED",
    "--add-opens=java.base/java.lang.reflect=ALL-UNNAMED",
    "--add-opens=java.base/java.io=ALL-UNNAMED",
    "--add-opens=java.base/java.net=ALL-UNNAMED",
    "--add-opens=java.base/java.nio=ALL-UNNAMED",
    "--add-opens=java.base/java.util=ALL-UNNAMED",
    "--add-opens=java.base/java.util.concurrent=ALL-UNNAMED",
    "--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED",
    "--add-opens=java.base/sun.nio.ch=ALL-UNNAMED",
    "--add-opens=java.base/sun.nio.cs=ALL-UNNAMED",
    "--add-opens=java.base/sun.security.action=ALL-UNNAMED",
    "--add-opens=java.base/sun.util.calendar=ALL-UNNAMED",
    "-Dorg.slf4j.simpleLogger.defaultLogLevel=ERROR",
    "-Dlogback.configurationFile=logback-test.xml",
    // Disable multi-release JAR processing to avoid path issues
    "-Djdk.util.jar.enableMultiRelease=false"
  )
}

// Base module configuration
trait BaseModule extends ScalaModule with ScalafmtModule {
  def scalaVersion = Constants.scalaVersion
  def jvmId = Constants.jvmId

  def repositoriesTask = Task.Anon { super.repositoriesTask() ++ Constants.repositories }

  def scalacOptions = Seq(
    "-deprecation",
    "-feature",
    "-unchecked",
    "-language:implicitConversions",
    "-language:postfixOps",
    "-language:reflectiveCalls"
  )

  def javacOptions = Seq(
    "-source", "11",
    "-target", "11"
  )

  // Merge strategy for assembly
  override def assemblyRules = Assembly.defaultRules ++ Seq(
    Assembly.Rule.AppendPattern("META-INF/services/*", "\n")
  )

  // Include both Scala and Java sources, exclude test sources from main compilation
  override def sources = Task.Sources(
    moduleDir / "src" / "main" / "scala",
    moduleDir / "src" / "main" / "java"
  )
}

// Common test module configuration
trait BaseTestModule extends ScalaModule with TestModule.ScalaTest {
  def jvmId = Constants.jvmId
  def scalaVersion = Constants.scalaVersion

  def testFramework = "org.scalatest.tools.Framework"

  // Use the same repositories as parent modules
  def repositoriesTask = Task.Anon { super.repositoriesTask() ++ Constants.repositories }

  // Override sources to use the correct test directory
  override def sources = Task.Sources(moduleDir / os.up / "src" / "test" / "scala")

  // Override resources to use the correct test resources directory
  override def resources = Task.Sources(moduleDir / os.up / "src" / "test" / "resources")

  // Enable parallel test execution using Mill's testParallelism
  def testParallelism = true
}

// JUnit 5 test module configuration (for Java tests)
trait BaseJUnitTestModule extends JavaModule with TestModule.Junit5 {
  def jvmId = Constants.jvmId
  // Use the same repositories as parent modules
  def repositoriesTask = Task.Anon { super.repositoriesTask() ++ Constants.repositories }

  // Override sources to use the correct test directory
  override def sources = Task.Sources(moduleDir / os.up / "src" / "test" / "java")

  // Override resources to use the correct test resources directory
  override def resources = Task.Sources(moduleDir / os.up / "src" / "test" / "resources")

  // Enable parallel test execution using Mill's testParallelism
  def testParallelism = true
}

// JUnit 4 test module configuration (for Java tests using JUnit 4)
trait BaseJUnit4TestModule extends JavaModule with TestModule.Junit4 {
  def jvmId = Constants.jvmId
  // Use the same repositories as parent modules
  def repositoriesTask = Task.Anon { super.repositoriesTask() ++ Constants.repositories }
  
  // Override sources to use the correct test directory
  override def sources = Task.Sources(moduleDir / os.up / "src" / "test" / "java")
  
  // Override resources to use the correct test resources directory
  override def resources = Task.Sources(moduleDir / os.up / "src" / "test" / "resources")
  
  // Enable parallel test execution using Mill's testParallelism
  def testParallelism = true
}