name: Test Scala and Python

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Note on the container image we're using in the various jobs below:
# If this is in a PR we use the pr specific docker image (as there might be docker file changes)
# Else we use the 'latest' image
jobs:
  python_tests:
    runs-on: ubuntu-latest
    container:
      image: ${{ github.event_name == 'pull_request' && format('{0}/{1}-ci:pr-{2}', 'ghcr.io', github.repository, github.event.pull_request.number) || format('{0}/{1}-ci:latest', 'ghcr.io', github.repository) }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python virtual environment
        run: |
          python3 -m venv chronon_py_env
          source chronon_py_env/bin/activate

      - name: Run Chronon Python lint
        run: |
          source chronon_py_env/bin/activate
          cd api/py/ai/chronon
          pip install importlib-metadata==4.11.4
          pip install flake8
          flake8 --extend-ignore=W605,Q000,F631

      - name: Run Chronon Python tests
        run: |
          source chronon_py_env/bin/activate
          thrift --gen py -out api/py/ai/chronon api/thrift/api.thrift
          cd api/py
          pip install -r requirements/dev.txt
          pip install tox
          tox

      - uses: actions/upload-artifact@v4
        with:
          name: htmlcov
          path: api/py/htmlcov

  other_spark_tests:
    runs-on: ubuntu-latest
    container:
      image: ${{ github.event_name == 'pull_request' && format('{0}/{1}-ci:pr-{2}', 'ghcr.io', github.repository, github.event.pull_request.number) || format('{0}/{1}-ci:latest', 'ghcr.io', github.repository) }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4

      - name: Run other spark tests
        run: |
          export SBT_OPTS="-Xmx8G -Xms2G --add-opens=java.base/sun.nio.ch=ALL-UNNAMED"
          sbt "spark/testOnly -- -l ai.chronon.spark.JoinTest -l ai.chronon.spark.test.MutationsTest -l ai.chronon.spark.test.FetcherTest"

  join_spark_tests:
    runs-on: ubuntu-latest
    container:
      image: ${{ github.event_name == 'pull_request' && format('{0}/{1}-ci:pr-{2}', 'ghcr.io', github.repository, github.event.pull_request.number) || format('{0}/{1}-ci:latest', 'ghcr.io', github.repository) }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4

      - name: Run other spark tests
        run: |
          export SBT_OPTS="-Xmx8G -Xms2G --add-opens=java.base/sun.nio.ch=ALL-UNNAMED"
          sbt "spark/testOnly ai.chronon.spark.JoinTest"

  mutation_spark_tests:
    runs-on: ubuntu-latest
    container:
      image: ${{ github.event_name == 'pull_request' && format('{0}/{1}-ci:pr-{2}', 'ghcr.io', github.repository, github.event.pull_request.number) || format('{0}/{1}-ci:latest', 'ghcr.io', github.repository) }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4

      - name: Run other spark tests
        run: |
          export SBT_OPTS="-Xmx8G -Xms2G --add-opens=java.base/sun.nio.ch=ALL-UNNAMED"
          sbt "spark/testOnly ai.chronon.spark.test.MutationsTest"

  fetcher_spark_tests:
    runs-on: ubuntu-latest
    container:
      image: ${{ github.event_name == 'pull_request' && format('{0}/{1}-ci:pr-{2}', 'ghcr.io', github.repository, github.event.pull_request.number) || format('{0}/{1}-ci:latest', 'ghcr.io', github.repository) }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4

      - name: Run other spark tests
        run: |
          export SBT_OPTS="-Xmx8G -Xms2G --add-opens=java.base/sun.nio.ch=ALL-UNNAMED"
          sbt "spark/testOnly ai.chronon.spark.test.FetcherTest"

  scala_compile_fmt_fix      :
    runs-on: ubuntu-latest
    container:
      image: ${{ github.event_name == 'pull_request' && format('{0}/{1}-ci:pr-{2}', 'ghcr.io', github.repository, github.event.pull_request.number) || format('{0}/{1}-ci:latest', 'ghcr.io', github.repository) }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4

      - name: Scala compile
        run: sbt "++ 2.12.18 compile"

      - name: Check Scalafmt
        run: sbt +scalafmtCheck

      - name: Check ScalaFix
        run: sbt "scalafixAll --check"


  other_scala_tests:
    runs-on: ubuntu-latest
    container:
      image: ${{ github.event_name == 'pull_request' && format('{0}/{1}-ci:pr-{2}', 'ghcr.io', github.repository, github.event.pull_request.number) || format('{0}/{1}-ci:latest', 'ghcr.io', github.repository) }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4

      - name: Run Flink tests
        run: |
          export SBT_OPTS="-Xmx8G -Xms2G"
          sbt "++ 2.12.18 flink/test"

      - name: Run Aggregator tests
        run: |
          export SBT_OPTS="-Xmx8G -Xms2G"
          sbt "++ 2.12.18 aggregator/test"

      - name: Run Online tests
        run: |
          export SBT_OPTS="-Xmx8G -Xms2G"
          sbt "++ 2.12.18 online/test"

      - name: Run api tests
        run: |
          export SBT_OPTS="-Xmx8G -Xms2G"
          sbt "++ 2.12.18 api/test"