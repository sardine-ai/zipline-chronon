//
// Autogenerated by Thrift Compiler (0.21.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
import Int64 = require('node-int64');


export declare enum Cardinality {
  LOW = 0,
  HIGH = 1,
}

/**
 * +----------------------------------+-------------------+----------------+----------------------------------+
 * | Metric                           | Moderate Drift    | Severe Drift   | Notes                            |
 * +----------------------------------+-------------------+----------------+----------------------------------+
 * | Jensen-Shannon Divergence        | 0.05 - 0.1        | > 0.1          | Max value is ln(2) â‰ˆ 0.69        |
 * +----------------------------------+-------------------+----------------+----------------------------------+
 * | Hellinger Distance               | 0.1 - 0.25        | > 0.25         | Ranges from 0 to 1               |
 * +----------------------------------+-------------------+----------------+----------------------------------+
 * | Population Stability Index (PSI) | 0.1 - 0.2         | > 0.2          | Industry standard in some fields |
 * +----------------------------------+-------------------+----------------+----------------------------------+
 * *
 */
export declare enum DriftMetric {
  JENSEN_SHANNON = 0,
  HELLINGER = 1,
  PSI = 3,
}

export declare class TileKey {
  column?: string;
  slice?: string;
  name?: string;
  sizeMillis?: Int64;

    constructor(args?: { column?: string; slice?: string; name?: string; sizeMillis?: Int64; });
}

export declare class TileSummary {
  percentiles?: number[];
  histogram?: { [k: string]: Int64; };
  count?: Int64;
  nullCount?: Int64;
  innerCount?: Int64;
  innerNullCount?: Int64;
  lengthPercentiles?: number[];
  stringLengthPercentiles?: number[];

    constructor(args?: { percentiles?: number[]; histogram?: { [k: string]: Int64; }; count?: Int64; nullCount?: Int64; innerCount?: Int64; innerNullCount?: Int64; lengthPercentiles?: number[]; stringLengthPercentiles?: number[]; });
}

export declare class TileSeriesKey {
  column?: string;
  slice?: string;
  groupName?: string;
  nodeName?: string;

    constructor(args?: { column?: string; slice?: string; groupName?: string; nodeName?: string; });
}

export declare class TileSummarySeries {
  percentiles?: number[][];
  histogram?: { [k: string]: Int64[]; };
  count?: Int64[];
  nullCount?: Int64[];
  innerCount?: Int64[];
  innerNullCount?: Int64[];
  lengthPercentiles?: number[][];
  stringLengthPercentiles?: number[][];
  timestamps?: Int64[];
  key?: TileSeriesKey;

    constructor(args?: { percentiles?: number[][]; histogram?: { [k: string]: Int64[]; }; count?: Int64[]; nullCount?: Int64[]; innerCount?: Int64[]; innerNullCount?: Int64[]; lengthPercentiles?: number[][]; stringLengthPercentiles?: number[][]; timestamps?: Int64[]; key?: TileSeriesKey; });
}

export declare class TileDrift {
  percentileDrift?: number;
  histogramDrift?: number;
  countChangePercent?: number;
  nullRatioChangePercent?: number;
  innerCountChangePercent?: number;
  innerNullCountChangePercent?: number;
  lengthPercentilesDrift?: number;
  stringLengthPercentilesDrift?: number;

    constructor(args?: { percentileDrift?: number; histogramDrift?: number; countChangePercent?: number; nullRatioChangePercent?: number; innerCountChangePercent?: number; innerNullCountChangePercent?: number; lengthPercentilesDrift?: number; stringLengthPercentilesDrift?: number; });
}

export declare class TileDriftSeries {
  percentileDriftSeries?: number[];
  histogramDriftSeries?: number[];
  countChangePercentSeries?: number[];
  nullRatioChangePercentSeries?: number[];
  innerCountChangePercentSeries?: number[];
  innerNullCountChangePercentSeries?: number[];
  lengthPercentilesDriftSeries?: number[];
  stringLengthPercentilesDriftSeries?: number[];
  timestamps?: Int64[];
  key?: TileSeriesKey;

    constructor(args?: { percentileDriftSeries?: number[]; histogramDriftSeries?: number[]; countChangePercentSeries?: number[]; nullRatioChangePercentSeries?: number[]; innerCountChangePercentSeries?: number[]; innerNullCountChangePercentSeries?: number[]; lengthPercentilesDriftSeries?: number[]; stringLengthPercentilesDriftSeries?: number[]; timestamps?: Int64[]; key?: TileSeriesKey; });
}

export declare class DriftSpec {
  slices?: string[];
  derivations?: { [k: string]: string; };
  columnCardinalityHints?: { [k: string]: Cardinality; };
  tileSize?: Window;
  lookbackWindows?: Window[];
  driftMetric?: DriftMetric;

    constructor(args?: { slices?: string[]; derivations?: { [k: string]: string; }; columnCardinalityHints?: { [k: string]: Cardinality; }; tileSize?: Window; lookbackWindows?: Window[]; driftMetric?: DriftMetric; });
}
