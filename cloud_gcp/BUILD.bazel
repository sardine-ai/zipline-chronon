shared_deps = [
    ":iceberg_bigquery_catalog_lib",
    "//api:lib",
    "//api:thrift_java",
    "//online:lib",
    "//spark:lib",
    "//tools/build_rules/spark:spark-exec",
    maven_artifact_with_suffix("org.scala-lang.modules:scala-java8-compat"),
    maven_artifact_with_suffix("org.json4s:json4s-core"),
    maven_artifact_with_suffix("org.json4s:json4s-jackson"),
    maven_artifact_with_suffix("org.json4s:json4s-ast"),
    maven_artifact_with_suffix("org.scala-lang.modules:scala-collection-compat"),
    maven_artifact_with_suffix("org.rogach:scallop"),
    maven_artifact("com.google.cloud:google-cloud-core"),
    maven_artifact("com.google.cloud:google-cloud-bigquery"),
    maven_artifact("com.google.cloud:google-cloud-bigtable"),
    maven_artifact("com.google.cloud:google-cloud-pubsub"),
    maven_artifact("com.google.cloud:google-cloud-dataproc"),
    maven_artifact("com.google.cloud.bigdataoss:gcsio"),
    maven_artifact("com.google.cloud.bigdataoss:gcs-connector"),
    maven_artifact("com.google.cloud.bigdataoss:util"),
    maven_artifact("com.google.cloud.bigdataoss:util-hadoop"),
    maven_artifact("org.apache.hadoop:hadoop-client-api"),
    maven_artifact("com.google.cloud.hosted.kafka:managed-kafka-auth-login-handler"),
    maven_artifact("com.google.api:api-common"),
    maven_artifact("com.google.api.grpc:proto-google-cloud-dataproc-v1"),
    maven_artifact("com.google.api:gax"),
    maven_artifact("com.google.guava:guava"),
    maven_artifact("com.google.protobuf:protobuf-java"),
    maven_artifact("org.yaml:snakeyaml"),
    maven_artifact("io.grpc:grpc-netty-shaded"),
    maven_artifact("ch.qos.reload4j:reload4j"),
    maven_artifact("org.slf4j:slf4j-api"),
    maven_artifact("org.apache.logging.log4j:log4j-slf4j-impl"),
    maven_artifact("org.threeten:threetenbp"),
    maven_artifact("org.apache.kafka:kafka-clients"),
    maven_artifact("com.google.cloud.spark:spark-3.5-bigquery"),
    maven_artifact_with_suffix("org.apache.iceberg:iceberg-spark-runtime-3.5"),
    maven_artifact("org.objenesis:objenesis"),
]

scala_library(
    name = "cloud_gcp_lib",
    srcs = glob(["src/main/**/*.scala"]),
    format = select({
        "//tools/config:scala_2_13": False,  # Disable for 2.13
        "//conditions:default": True,  # Enable for other versions
    }),
    visibility = ["//visibility:public"],
    deps = shared_deps,
)

test_deps = [
    maven_artifact("com.google.cloud:google-cloud-bigtable-emulator"),

    # Testing
    maven_artifact_with_suffix("org.scalatest:scalatest-matchers-core"),
    maven_artifact_with_suffix("org.scalatest:scalatest-core"),
    maven_artifact_with_suffix("org.scalatest:scalatest"),
    maven_artifact_with_suffix("org.scalatest:scalatest-flatspec"),
    maven_artifact_with_suffix("org.scalatest:scalatest-funsuite"),
    maven_artifact_with_suffix("org.scalatest:scalatest-shouldmatchers"),
    maven_artifact_with_suffix("org.scalactic:scalactic"),
    maven_artifact_with_suffix("org.scalatestplus:mockito-3-4"),
    maven_artifact_with_suffix("org.mockito:mockito-scala"),
    maven_artifact("org.mockito:mockito-core"),
    maven_artifact("org.scalatest:scalatest-compatible"),
    maven_artifact("junit:junit"),
    maven_artifact("com.novocode:junit-interface"),
]

java_import(
    name = "iceberg_bigquery_catalog_lib",
    jars = ["iceberg-bigquery-catalog-1.5.2-1.0.1-beta.jar"],
    visibility = ["//visibility:public"],
)

scala_test_suite(
    name = "tests",
    srcs = glob(["src/test/**/*.scala"]),
    # defined in prelude_bazel file
    jvm_flags = _JVM_FLAGS_FOR_ACCESSING_BASE_JAVA_CLASSES,
    visibility = ["//visibility:public"],
    deps = shared_deps + test_deps + [":cloud_gcp_lib"],
)
