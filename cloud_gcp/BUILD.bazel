scala_library(
    name = "cloud_gcp_lib",
    srcs = glob(["src/main/**/*.scala"]),
    visibility = ["//visibility:public"],
    deps = [
        "//api:lib",
        "//api:thrift",
        "//online:lib",
        "//spark:lib",
        "//tools/build_rules/spark:spark-exec",
        scala_artifact("org.scala-lang.modules:scala-java8-compat"),
        scala_artifact("org.json4s:json4s-core"),
        scala_artifact("org.json4s:json4s-jackson"),
        scala_artifact("org.json4s:json4s-ast"),
        scala_artifact("org.scala-lang.modules:scala-collection-compat"),
        scala_artifact("org.rogach:scallop"),
        maven_artifact("com.google.cloud:google-cloud-core"),
        maven_artifact("com.google.cloud:google-cloud-bigquery"),
        maven_artifact("com.google.cloud:google-cloud-bigtable"),
        maven_artifact("com.google.cloud:google-cloud-pubsub"),
        maven_artifact("com.google.cloud:google-cloud-dataproc"),
        maven_artifact("com.google.cloud.bigdataoss:gcsio"),
        maven_artifact("com.google.cloud.bigdataoss:util-hadoop"),
        scala_artifact("com.google.cloud.spark:spark-bigquery-with-dependencies"),
        maven_artifact("com.google.api:api-common"),
        maven_artifact("com.google.api.grpc:proto-google-cloud-dataproc-v1"),
        maven_artifact("com.google.api:gax"),
        maven_artifact("com.google.guava:guava"),
        maven_artifact("com.google.protobuf:protobuf-java"),
        maven_artifact("org.yaml:snakeyaml"),
        maven_artifact("io.grpc:grpc-netty-shaded"),
        maven_artifact("ch.qos.reload4j:reload4j"),
        maven_artifact("org.slf4j:slf4j-api"),
        maven_artifact("org.apache.logging.log4j:log4j-slf4j-impl"),
        maven_artifact("org.threeten:threetenbp"),
    ],
)

jvm_binary(
    name = "cloud_gcp_submitter",
    main_class = "ai.chronon.integrations.cloud_gcp.DataprocSubmitter",
    runtime_deps = [":cloud_gcp_lib"],
)

test_deps = [
    ":cloud_gcp_lib",
    "//api:thrift",
    "//api:lib",
    "//online:lib",
    "//spark:lib",
    "//tools/build_rules/spark:spark-exec",
    # Libraries
    scala_artifact("org.scala-lang.modules:scala-java8-compat"),
    scala_artifact("org.scala-lang.modules:scala-collection-compat"),
    maven_artifact("com.google.cloud:google-cloud-bigquery"),
    maven_artifact("com.google.cloud:google-cloud-bigtable"),
    maven_artifact("com.google.cloud:google-cloud-dataproc"),
    maven_artifact("com.google.cloud.bigdataoss:gcs-connector"),
    maven_artifact("com.google.cloud.bigdataoss:gcsio"),
    maven_artifact("com.google.cloud.bigdataoss:util-hadoop"),
    maven_artifact("com.google.cloud:google-cloud-bigtable-emulator"),
    maven_artifact("com.google.api:api-common"),
    maven_artifact("com.google.api.grpc:proto-google-cloud-dataproc-v1"),
    scala_artifact("com.google.cloud.spark:spark-bigquery-with-dependencies"),
    maven_artifact("com.google.api:gax"),
    maven_artifact("com.google.protobuf:protobuf-java"),
    maven_artifact("org.apache.hadoop:hadoop-client-api"),
    # Testing
    scala_artifact("org.scalatest:scalatest-matchers-core"),
    scala_artifact("org.scalatest:scalatest-core"),
    scala_artifact("org.scalatest:scalatest"),
    scala_artifact("org.scalatest:scalatest-flatspec"),
    scala_artifact("org.scalatest:scalatest-funsuite"),
    scala_artifact("org.scalatest:scalatest-shouldmatchers"),
    scala_artifact("org.scalactic:scalactic"),
    scala_artifact("org.scalatestplus:mockito-3-4"),
    scala_artifact("org.mockito:mockito-scala"),
    maven_artifact("org.mockito:mockito-core"),
    maven_artifact("org.scalatest:scalatest-compatible"),
    maven_artifact("junit:junit"),
    maven_artifact("com.novocode:junit-interface"),
]

scala_library(
    name = "cloud_gcp_test_lib",
    srcs = glob(["src/test/**/*.scala"]),
    visibility = ["//visibility:public"],
    deps = test_deps,
)


scala_test_suite(
    name = "cloud_gcp_test",
    srcs = glob(["src/test/**/*.scala"]),
    # defined in prelude_bazel file
    jvm_flags = _JVM_FLAGS_FOR_ACCESSING_BASE_JAVA_CLASSES,
    visibility = ["//visibility:public"],
    deps = test_deps + [":cloud_gcp_test_lib"],
)
