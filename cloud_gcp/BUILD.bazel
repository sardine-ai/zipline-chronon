shared_deps = [
    ":iceberg_bigquery_catalog_lib",
    "//api:lib",
    "//api:thrift_java",
    "//online:lib",
    "//spark:lib",
    "//spark:catalog_lib",
    "//spark:submission_lib",
    "//tools/build_rules/spark:spark-exec",
    maven_artifact_with_suffix("org.scala-lang.modules:scala-java8-compat"),
    maven_artifact_with_suffix("org.json4s:json4s-core"),
    maven_artifact_with_suffix("org.json4s:json4s-jackson"),
    maven_artifact_with_suffix("org.json4s:json4s-ast"),
    maven_artifact_with_suffix("org.scala-lang.modules:scala-collection-compat"),
    maven_artifact_with_suffix("org.rogach:scallop"),
    maven_artifact("com.google.cloud:google-cloud-core"),
    maven_artifact("com.google.cloud:google-cloud-bigquery"),
    maven_artifact("com.google.cloud:google-cloud-bigtable"),
    maven_artifact("com.google.cloud:google-cloud-pubsub"),
    maven_artifact("com.google.cloud:google-cloud-dataproc"),
    maven_artifact("com.google.cloud.bigdataoss:gcsio"),
    maven_artifact("com.google.cloud.bigdataoss:gcs-connector"),
    maven_artifact("com.google.cloud.bigdataoss:util"),
    maven_artifact("com.google.cloud.bigdataoss:util-hadoop"),
    maven_artifact("org.apache.hadoop:hadoop-client-api"),
    maven_artifact("com.google.cloud.hosted.kafka:managed-kafka-auth-login-handler"),
    maven_artifact("com.google.api:api-common"),
    maven_artifact("com.google.api.grpc:proto-google-cloud-dataproc-v1"),
    maven_artifact("com.google.api:gax"),
    maven_artifact("com.google.guava:guava"),
    maven_artifact("com.google.protobuf:protobuf-java"),
    maven_artifact("org.yaml:snakeyaml"),
    maven_artifact("io.grpc:grpc-netty-shaded"),
    maven_artifact("org.slf4j:slf4j-api"),
    maven_artifact("ch.qos.reload4j:reload4j"),
    maven_artifact("org.threeten:threetenbp"),
    maven_artifact("org.apache.kafka:kafka-clients"),
    maven_artifact("org.apache.avro:avro"),
    maven_artifact("com.google.cloud.spark:spark-3.5-bigquery"),
    maven_artifact_with_suffix("org.apache.iceberg:iceberg-spark-runtime-3.5"),
    maven_artifact("org.objenesis:objenesis"),
]

scala_library(
    name = "base_cloud_gcp_lib",
    srcs = glob(["src/main/**/*.scala"]),
    format = select({
        "//tools/config:scala_2_13": False,  # Disable for 2.13
        "//conditions:default": True,  # Enable for other versions
    }),
    visibility = ["//visibility:public"],
    deps = shared_deps,
)

jvm_binary(
    name = "cloud_gcp_lib",
    deploy_env = ["//tools/build_rules/cloud_gcp:cloud_gcp"],
    main_class = "None",
    runtime_deps = [
        ":base_cloud_gcp_lib",
    ],
)

jvm_binary(
    name = "cloud_gcp_embedded_lib",
    deploy_env = ["//tools/build_rules/cloud_gcp_embedded:cloud_gcp_embedded"],
    main_class = "None",
    runtime_deps = [
        ":base_cloud_gcp_lib",
    ],
)

test_deps = _SCALA_TEST_DEPS + [
    maven_artifact("com.google.cloud:google-cloud-bigtable-emulator"),
]

java_import(
    name = "iceberg_bigquery_catalog_lib",
    jars = ["iceberg-bigquery-catalog-1.6.1-1.0.1-beta.jar"],
    visibility = ["//visibility:public"],
)

scala_test_suite(
    name = "tests",
    srcs = glob(["src/test/**/*.scala"]),
    # defined in prelude_bazel file
    jvm_flags = _JVM_FLAGS_FOR_ACCESSING_BASE_JAVA_CLASSES,
    visibility = ["//visibility:public"],
    deps = shared_deps + test_deps + [":base_cloud_gcp_lib"],
)

create_shaded_library(
    name = "shaded_bigtable",
    inline_rules = [
        "rule com.google.cloud.bigtable.** com.google.cloud.shaded_bigtable.@1",
        "rule com.google.bigtable.** com.google.shaded_bigtable.@1",
    ],
    input_artifact = "com.google.cloud:google-cloud-bigtable",
)

create_shaded_library(
    name = "shaded_bigtable_proto",
    inline_rules = [
        "rule com.google.bigtable.** com.google.shaded_bigtable.@1",
    ],
    input_artifact = "com.google.api.grpc:proto-google-cloud-bigtable-v2",
)

create_shaded_library(
    name = "shaded_bigtable_admin_proto",
    inline_rules = [
        "rule com.google.bigtable.** com.google.shaded_bigtable.@1",
    ],
    input_artifact = "com.google.api.grpc:proto-google-cloud-bigtable-admin-v2",
)

create_shaded_library(
    name = "shaded_grpc_bigtable",
    inline_rules = [
        "rule com.google.bigtable.** com.google.shaded_bigtable.@1",
    ],
    input_artifact = "com.google.api.grpc:grpc-google-cloud-bigtable-v2",
)

create_shaded_library(
    name = "shaded_snakeyaml",
    inline_rules = [
        "rule org.yaml.snakeyaml.** org.yaml.shaded_snakeyaml.@1",
    ],
    input_artifact = "org.yaml:snakeyaml",
)
