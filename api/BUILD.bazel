load("//tools/build_rules/thrift:thrift.bzl", "thrift_gen_library")

thrift_gen_library(
    name = "thrift_gen",
    srcs = glob(["thrift/*.thrift"]),
)

java_library(
    name = "thrift_java",
    srcs = [":thrift_gen"] + glob(["src/main/java/ai/chronon/api/thrift/**/*.java"]),
    visibility = ["//visibility:public"],
    deps = [
        maven_artifact("javax.annotation:javax.annotation.api"),
        maven_artifact("org.slf4j:slf4j-api"),
        maven_artifact("org.apache.logging.log4j:log4j-slf4j-impl"),
        maven_artifact("org.apache.commons:commons-lang3"),
        maven_artifact("com.google.code.gson:gson"),
    ],
)

scala_library(
    name = "lib",
    srcs = glob([
        "src/main/**/*.scala",
        "src/main/**/*.java",
    ]),
    format = select({
        "//tools/config:scala_2_13": False,  # Disable for 2.13
        "//conditions:default": True,  # Enable for other versions
 }),
    visibility = ["//visibility:public"],
    deps = [
        ":thrift_java",
        "//tools/build_rules/spark:spark-exec",
        maven_artifact("com.fasterxml.jackson.core:jackson-core"),
        maven_artifact("com.fasterxml.jackson.core:jackson-databind"),
        maven_artifact("org.slf4j:slf4j-api"),
        maven_artifact("org.apache.logging.log4j:log4j-slf4j-impl"),
        maven_artifact("org.apache.commons:commons-lang3"),
        maven_artifact("com.google.code.gson:gson"),
        maven_scala_artifact("org.scala-lang.modules:scala-collection-compat"),
        maven_scala_artifact("org.scala-lang.modules:scala-parser-combinators"),
    ],
)

test_deps = [
    ":lib",
    ":thrift_java",
    "//tools/build_rules/spark:spark-exec",
    # Libraries
    maven_artifact("com.fasterxml.jackson.core:jackson-core"),
    maven_artifact("com.fasterxml.jackson.core:jackson-databind"),
    maven_artifact("org.slf4j:slf4j-api"),
    maven_artifact("org.apache.logging.log4j:log4j-slf4j-impl"),
    # Testing
    maven_scala_artifact("org.scala-lang.modules:scala-parser-combinators"),
    maven_scala_artifact("org.scala-lang.modules:scala-collection-compat"),
    maven_scala_artifact("org.scalatest:scalatest-matchers-core"),
    maven_scala_artifact("org.scalatest:scalatest-core"),
    maven_scala_artifact("org.scalatest:scalatest"),
    maven_scala_artifact("org.scalatest:scalatest-flatspec"),
    maven_scala_artifact("org.scalatest:scalatest-funsuite"),
    maven_scala_artifact("org.scalatest:scalatest-shouldmatchers"),
    maven_scala_artifact("org.scalactic:scalactic"),
    maven_scala_artifact("org.scalatestplus:mockito-3-4"),
    maven_scala_artifact("org.mockito:mockito-scala"),
    maven_artifact("org.mockito:mockito-core"),
    maven_artifact("org.scalatest:scalatest-compatible"),
    maven_artifact("junit:junit"),
    maven_artifact("com.novocode:junit-interface"),
]

scala_library(
    name = "test-lib",
    srcs = glob(["src/test/**/*.scala"]),
    format = select({
        "//tools/config:scala_2_13": False,  # Disable for 2.13
        "//conditions:default": True,  # Enable for other versions
 }),
    visibility = ["//visibility:public"],
    deps = test_deps,
)

scala_test_suite(
    name = "tests",
    srcs = glob(["src/test/**/*.scala"]),
    visibility = ["//visibility:public"],
    deps = test_deps + [":test-lib"],
)
