scala_library(
    name = "lib",
    srcs = glob(["src/main/**/*.scala"]) + glob(["src/main/**/*.java"]),
    format = True,
    visibility = ["//visibility:public"],
    deps = _VERTX_DEPS + _CIRCE_DEPS + [
        "//api:lib",
        "//api:thrift_java",
        "//online:lib",
        "//service_commons:lib",
        "//spark:lib",
        maven_scala_artifact("org.typelevel:cats-core"),
        maven_scala_artifact("com.chuusai:shapeless"),
        maven_scala_artifact("org.json4s:json4s-core"),
        maven_scala_artifact("org.json4s:json4s-jackson"),
        maven_scala_artifact("org.scala-lang.modules:scala-java8-compat"),
        maven_scala_artifact("org.scala-lang.modules:scala-collection-compat"),
        maven_artifact("ch.qos.logback:logback-classic"),
        maven_artifact("org.slf4j:slf4j-api"),
        maven_artifact("com.typesafe:config"),
        maven_artifact("io.netty:netty-all"),
        maven_artifact("io.micrometer:micrometer-registry-statsd"),
        maven_artifact("io.micrometer:micrometer-core"),
    ],
)

test_deps = _VERTX_TEST_DEPS + _CIRCE_DEPS + [
    ":lib",
    "//api:thrift_java",
    "//api:lib",
    "//online:lib",
    "//spark:lib",
    "//service_commons:lib",
    # Libraries
    maven_scala_artifact("org.typelevel:cats-core"),
    maven_scala_artifact("com.chuusai:shapeless"),
    maven_scala_artifact("org.scala-lang.modules:scala-java8-compat"),
    maven_scala_artifact("org.scala-lang.modules:scala-collection-compat"),
    # Testing
    maven_scala_artifact("org.scalatest:scalatest-matchers-core"),
    maven_scala_artifact("org.scalatest:scalatest-core"),
    maven_scala_artifact("org.scalatest:scalatest"),
    maven_scala_artifact("org.scalatest:scalatest-flatspec"),
    maven_scala_artifact("org.scalatest:scalatest-funsuite"),
    maven_scala_artifact("org.scalatest:scalatest-shouldmatchers"),
    maven_scala_artifact("org.scalactic:scalactic"),
    maven_scala_artifact("org.scalatestplus:mockito-3-4"),
    maven_scala_artifact("org.mockito:mockito-scala"),
    maven_artifact("org.mockito:mockito-core"),
    maven_artifact("org.scalatest:scalatest-compatible"),
    maven_artifact("junit:junit"),
    maven_artifact("com.novocode:junit-interface"),
    maven_artifact("net.bytebuddy:byte-buddy"),
    maven_artifact("net.bytebuddy:byte-buddy-agent"),
]

scala_library(
    name = "test_lib",
    srcs = glob(["src/test/**/*.scala"]),
    format = True,
    resources = glob(["src/test/resources/**/*"]),
    visibility = ["//visibility:public"],
    deps = test_deps,
)

scala_junit_suite(
    name = "tests",
    srcs = glob(["src/test/**/*.scala"]),
    data = glob(["src/test/resources/**/*"]),
    resources = glob(["hub/src/test/resources/**/*"]),
    visibility = ["//visibility:public"],
    deps = test_deps + [":test_lib"],
)

jvm_binary(
    name = "hub_assembly",
    main_class = "ai.chronon.service.ChrononServiceLauncher",
    runtime_deps = [":lib"],
)
