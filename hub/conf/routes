# Backend APIs
GET     /api/v1/ping                                     controllers.ApplicationController.ping()
GET     /api/v1/models                                   controllers.ModelController.list(offset: Option[Int], limit: Option[Int])
GET     /api/v1/search                                   controllers.SearchController.search(term: String, offset: Option[Int], limit: Option[Int])
GET     /api/v1/model/:id/timeseries                     controllers.TimeSeriesController.fetchModel(id: String, startTs: Long, endTs: Long, offset: String, algorithm: String)
GET     /api/v1/model/:id/timeseries/slice/:sliceId      controllers.TimeSeriesController.fetchModelSlice(id: String, sliceId: String, startTs: Long, endTs: Long, offset: String, algorithm: String)
GET     /api/v1/join/:name/timeseries                    controllers.TimeSeriesController.fetchJoin(name: String, startTs: Long, endTs: Long, metricType: String, metrics: String, offset: Option[String], algorithm: Option[String])
GET     /api/v1/join/:name/timeseries/slice/:sliceId     controllers.TimeSeriesController.fetchJoinSlice(name: String, sliceId: String, startTs: Long, endTs: Long, metricType: String, metrics: String, offset: Option[String], algorithm: Option[String])
GET     /api/v1/feature/:name/timeseries                 controllers.TimeSeriesController.fetchFeature(name: String, startTs: Long, endTs: Long, metricType: String, metrics: String, granularity: String, offset: Option[String], algorithm: Option[String])
GET     /api/v1/feature/:name/timeseries/slice/:sliceId  controllers.TimeSeriesController.fetchFeatureSlice(name: String, sliceId: String, startTs: Long, endTs: Long, metricType: String, metrics: String, granularity: String, offset: Option[String], algorithm: Option[String])
